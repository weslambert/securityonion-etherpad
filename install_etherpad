#!/bin/bash
. /usr/sbin/so-common

# Clone repo
header "Cloning repo..."
[ -d ~/securityonion-etherpad ] && rm -rf ~/securityonion-etherpad
git clone https://github.com/weslambert/securityonion-etherpad

# Create etherpad dir
[ -d ~/etherpad ] && rm -rf ~/etherpad
mkdir ~/etherpad

header "Copying web config..."
cp -av securityonion-etherpad/etherpad.conf /etc/apache2/sites-available/etherpad.conf
echo

# If 000-securityonion.conf does not exist, create it
#if [ ! -f /etc/apache2/sites-available/000-securityonion.conf ]; then
#	cp /etc/apache2/sites-available/securityonion.conf /etc/apache2/sites-available/000-securityonion.conf
#	a2ensite 000-securityonion.conf
#fi

# Get domain
echo "Please specify a domain to use to access Etherpad (Example: etherpad.example.com) and press [ENTER]:"
read DOMAIN_NAME

# Enable etherpad site
header "Enabling site..."
sed -i "s/etherpad.example.org/$DOMAIN_NAME/" /etc/apache2/sites-available/etherpad.conf
a2ensite etherpad.conf
echo

# Add entry in /etc/hosts
echo "127.0.0.1    $DOMAIN_NAME" >> /etc/hosts

# Restart Apache
header "Restarting Apache..."
echo
service apache2 restart
  
# Pull Docker container
header "Pulling container from Docker Hub..."
docker pull wlambert/so-etherpad && \
echo

# Run Docker container
header "Starting Docker container..."
if docker ps -a | grep so-etherpad > /dev/null; then
        docker stop so-etherpad
        docker ps -a | grep "so-etherpad" | awk '{print $1}' | xargs docker rm
fi
docker run -it -d --name=so-etherpad -p 9001:9001 wlambert/so-etherpad && \
echo

# Done
header "Configuration Complete"
echo "Done!"
echo
echo "Etherpad should now be accessible at https://$DOMAIN_NAME"
echo
echo "If you haven't already, make sure to run so-allow to allow an analyst access to port 443 to access Etherpad and other tools."
echo
echo "Also keep in mind, if DNS configuration is not in place for the provided domain, you will"
echo "need to place an entry in the client's host(s) file:"
echo
echo "Ex: 127.0.0.1    $DOMAIN_NAME"
echo
